// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestPracticeTask.API.DbContexts;

#nullable disable

namespace RestPracticeTask.API.Migrations
{
    [DbContext(typeof(PracticeAppContext))]
    [Migration("20221031130637_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RestPracticeTask.API.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dfef3a8c-a6e2-4c54-89aa-cdcdeed7ec09"),
                            Name = "Cars"
                        },
                        new
                        {
                            Id = new Guid("ac12210a-1419-49d6-8f4b-da20b0ddd10f"),
                            Name = "TVs"
                        });
                });

            modelBuilder.Entity("RestPracticeTask.API.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(24,4)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("324f1a6a-b551-4a5a-a852-09fae0dbbc2a"),
                            CategoryId = new Guid("dfef3a8c-a6e2-4c54-89aa-cdcdeed7ec09"),
                            ImgUrl = "https://en.wikipedia.org/wiki/Honda#/media/File:Honda_T360_1963_in_Honda_Collection_Hall.jpg",
                            Name = "Honda T360",
                            Price = 500000m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("6a275163-8d3e-491c-9bb0-c49026519070"),
                            CategoryId = new Guid("dfef3a8c-a6e2-4c54-89aa-cdcdeed7ec09"),
                            ImgUrl = "https://en.wikipedia.org/wiki/BMW#/media/File:2018_BMW_X2_xDrive20D_M_Sport_X_Automatic_2.0.jpg",
                            Name = "BMW X2",
                            Price = 800000m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("dd623036-e8fc-44d7-b8ed-4c7d4aba84eb"),
                            CategoryId = new Guid("dfef3a8c-a6e2-4c54-89aa-cdcdeed7ec09"),
                            ImgUrl = "https://en.wikipedia.org/wiki/Mercedes-Benz#/media/File:Mercedes-Benz_W223_IMG_3951.jpg",
                            Name = "Mercedes S-Class",
                            Price = 1500000m,
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("f96e8bf1-606b-47b0-9805-55442d4cbcdb"),
                            CategoryId = new Guid("ac12210a-1419-49d6-8f4b-da20b0ddd10f"),
                            ImgUrl = "https://en.wikipedia.org/wiki/Samsung_Electronics#/media/File:Samsung_UN105S9_20140127.jpg",
                            Name = "Samsung TV",
                            Price = 5211m,
                            Quantity = 55
                        },
                        new
                        {
                            Id = new Guid("049abed8-0458-45a9-ba41-2d95fc45152d"),
                            CategoryId = new Guid("ac12210a-1419-49d6-8f4b-da20b0ddd10f"),
                            ImgUrl = "https://en.wikipedia.org/wiki/Sharp_Corporation#/media/File:Sharp_C1_NES_TV_14C-C1F.png",
                            Name = "Old Sharp TV",
                            Price = 335m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("RestPracticeTask.API.Entities.Product", b =>
                {
                    b.HasOne("RestPracticeTask.API.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
